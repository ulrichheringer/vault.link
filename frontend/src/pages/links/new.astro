---
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Novo Link">
    <div class="max-w-4xl mx-auto p-8">
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl font-bold">Novo Link</h1>
            <a
                href="/dashboard"
                class="bg-[#1a1a1a] border-2 border-[#333] px-6 py-2 rounded-xl hover:border-white transition-colors font-medium"
            >
                ‚Üê Voltar
            </a>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <form
                id="link-form"
                class="lg:col-span-2 bg-[#1a1a1a] border-2 border-[#333] rounded-2xl p-8"
            >
                <div class="mb-6">
                    <label
                        for="title"
                        class="block text-gray-400 text-sm font-medium mb-2"
                    >
                        T√≠tulo *
                    </label>
                    <input
                        type="text"
                        id="title"
                        name="title"
                        required
                        placeholder="Ex: GitHub, Netflix, etc."
                        class="w-full px-4 py-3 bg-black border-2 border-[#333] rounded-xl text-white focus:border-white focus:outline-none transition-colors"
                    />
                </div>

                <div class="mb-6">
                    <label
                        for="url"
                        class="block text-gray-400 text-sm font-medium mb-2"
                    >
                        URL *
                    </label>
                    <input
                        type="url"
                        id="url"
                        name="url"
                        required
                        placeholder="https://exemplo.com"
                        class="w-full px-4 py-3 bg-black border-2 border-[#333] rounded-xl text-white focus:border-white focus:outline-none transition-colors"
                    />
                </div>

                <div class="mb-6">
                    <label
                        for="description"
                        class="block text-gray-400 text-sm font-medium mb-2"
                    >
                        Descri√ß√£o (opcional)
                    </label>
                    <textarea
                        id="description"
                        name="description"
                        rows="4"
                        placeholder="Adicione uma descri√ß√£o para este link..."
                        class="w-full px-4 py-3 bg-black border-2 border-[#333] rounded-xl text-white focus:border-white focus:outline-none transition-colors resize-none"
                    ></textarea>
                </div>

                <div class="mb-6">
                    <label
                        for="categoryId"
                        class="block text-gray-400 text-sm font-medium mb-2"
                    >
                        Categoria (opcional)
                    </label>
                    <select
                        id="categoryId"
                        name="categoryId"
                        class="w-full px-4 py-3 bg-black border-2 border-[#333] rounded-xl text-white focus:border-white focus:outline-none transition-colors"
                    >
                        <option value="">Sem categoria</option>
                    </select>
                </div>

                <button
                    type="submit"
                    class="w-full bg-white text-black px-6 py-3 rounded-xl font-semibold hover:opacity-85 hover:-translate-y-0.5 transition-all"
                >
                    Adicionar Link
                </button>

                <div
                    id="error-message"
                    class="text-red-500 text-sm text-center mt-4 hidden"
                >
                </div>
                <div
                    id="success-message"
                    class="text-green-500 text-sm text-center mt-4 hidden"
                >
                </div>
            </form>

            <div class="bg-[#1a1a1a] border-2 border-[#333] rounded-2xl p-8">
                <h3 class="text-xl font-bold mb-4">üí° Dica</h3>
                <p class="text-gray-400 mb-4">
                    Organize seus links por categoria para encontr√°-los mais
                    facilmente depois!
                </p>
                <p class="text-gray-400">
                    Se voc√™ ainda n√£o criou categorias, <a
                        href="/categories/new"
                        class="text-white underline hover:opacity-80"
                        >clique aqui</a
                    >.
                </p>
            </div>
        </div>
    </div>
</Layout>

<script>
    import { getToken, logout } from "../../lib/auth";

    const token = getToken();
    if (!token) {
        window.location.href = "/login";
    }

    const form = document.getElementById("link-form") as HTMLFormElement;
    const errorDiv = document.getElementById("error-message") as HTMLDivElement;
    const successDiv = document.getElementById(
        "success-message",
    ) as HTMLDivElement;

    interface Category {
        id: number;
        name: string;
    }

    async function loadCategories() {
        try {
            const response = await fetch("http://localhost:3000/categories", {
                headers: {
                    Authorization: `Bearer ${token}`,
                },
            });

            if (response.status === 401) {
                logout();
                return;
            }

            const categories: Category[] = await response.json();
            const select = document.getElementById(
                "categoryId",
            ) as HTMLSelectElement;

            categories.forEach((cat) => {
                const option = document.createElement("option");
                option.value = cat.id.toString();
                option.textContent = cat.name;
                select.appendChild(option);
            });
        } catch (error) {
            console.error("Erro ao carregar categorias:", error);
        }
    }

    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        errorDiv.classList.add("hidden");
        successDiv.classList.add("hidden");

        const formData = new FormData(form);
        const title = formData.get("title") as string;
        const url = formData.get("url") as string;
        const description = formData.get("description") as string;
        const categoryIdStr = formData.get("categoryId") as string;

        const payload: any = {
            title,
            url,
        };

        if (description) {
            payload.description = description;
        }

        if (categoryIdStr) {
            payload.categoryId = Number(categoryIdStr);
        }

        try {
            const response = await fetch("http://localhost:3000/links", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${token}`,
                },
                body: JSON.stringify(payload),
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || "Erro ao criar link");
            }

            successDiv.textContent = "Link criado com sucesso!";
            successDiv.classList.remove("hidden");
            form.reset();

            // Redireciona para o dashboard ap√≥s 2 segundos
            setTimeout(() => {
                window.location.href = "/dashboard";
            }, 2000);
        } catch (error) {
            errorDiv.textContent =
                error instanceof Error ? error.message : "Erro ao criar link";
            errorDiv.classList.remove("hidden");
        }
    });

    // Carrega categorias ao iniciar
    loadCategories();
</script>
