name: Tests

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:16-alpine
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: linkvault_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

            redis:
                image: redis:7-alpine
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: Install dependencies
              working-directory: ./backend
              run: bun install

            - name: Create test environment file
              working-directory: ./backend
              run: |
                  cat > .env.test << EOF
                  DATABASE_URL=postgresql://postgres:postgres@localhost:5432/linkvault_test
                  REDIS_URL=redis://localhost:6379
                  JWT_SECRET=test-secret-key-github-actions
                  NODE_ENV=test
                  PORT=3000
                  EOF

            - name: Run database migrations
              working-directory: ./backend
              run: bun run drizzle-kit push
              env:
                  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/linkvault_test

            - name: Run tests
              working-directory: ./backend
              run: bun test

            - name: Run tests with coverage
              working-directory: ./backend
              run: bun test:coverage

            - name: Upload coverage to Codecov (optional)
              if: github.event_name == 'push'
              uses: codecov/codecov-action@v4
              with:
                  files: ./backend/coverage/coverage-final.json
                  flags: unittests
                  name: backend-coverage
                  fail_ci_if_error: false
